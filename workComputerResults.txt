$ node benchmarking.js
Bubble Sort Test: [
  1, 2, 3, 4, 5,
  6, 7, 8, 9
]
Bubble Sort Smart Test: [
  1, 2, 3, 4, 5,
  6, 7, 8, 9
]
Insertion Sort Test: [
  1, 2, 3, 4, 5,
  6, 7, 8, 9
]
Selection Sort Test: [
  1, 2, 3, 4, 5,
  6, 7, 8, 9
]
Merge Sort Test: [
  1, 2, 3, 4, 5,
  6, 7, 8, 9
]
Quick Sort Test: [
  1, 2, 3, 4, 5,
  6, 7, 8, 9
]
Counting Sort Test: [
  1, 2, 3, 4, 5,
  6, 7, 8, 9
]
Radix Sort Test: [
  1, 2, 3, 4, 5,
  6, 7, 8, 9
]
Bitwise Radix Sort Test: [
  1, 2, 3, 4, 5,
  6, 7, 8, 9
]
Heap Sort Test: [
  1, 2, 3, 4, 5,
  6, 7, 8, 9
]
Shell Sort Test: [
  1, 2, 3, 4, 5,
  6, 7, 8, 9
]
Generating test arrays...
Test arrays generated.
Generated test sizes for incremental test: [
     10,    11,    12,    13,    14,    16,    17,    19,    21,
     23,    25,    28,    31,    34,    37,    41,    45,    50,
     55,    61,    67,    74,    81,    89,    98,   108,   119,
    131,   144,   158,   174,   191,   211,   232,   255,   281,
    309,   340,   374,   411,   452,   497,   547,   602,   662,
    728,   801,   881,   970,  1067,  1173,  1291,  1420,  1562,
   1718,  1890,  2079,  2287,  2516,  2768,  3044,  3349,  3684,
   4052,  4457,  4903,  5394,  5933,  6526,  7179,  7897,  8687,
   9555, 10511, 11562, 12718, 13990, 15389, 16928, 18621, 20484,
  22532, 24785, 27264, 29990
]
Finished tests for size: 10
Finished tests for size: 11
Finished tests for size: 12
Finished tests for size: 13
Finished tests for size: 14
Finished tests for size: 16
Finished tests for size: 17
Finished tests for size: 19
Finished tests for size: 21
Finished tests for size: 23
Finished tests for size: 25
Finished tests for size: 28
Finished tests for size: 31
Finished tests for size: 34
Finished tests for size: 37
Finished tests for size: 41
Finished tests for size: 45
Finished tests for size: 50
Finished tests for size: 55
Finished tests for size: 61
Finished tests for size: 67
Finished tests for size: 74
Finished tests for size: 81
Finished tests for size: 89
Finished tests for size: 98
Finished tests for size: 108
Finished tests for size: 119
Finished tests for size: 131
Finished tests for size: 144
Finished tests for size: 158
Finished tests for size: 174
Finished tests for size: 191
Finished tests for size: 211
Finished tests for size: 232
Finished tests for size: 255
Finished tests for size: 281
Finished tests for size: 309
Finished tests for size: 340
Finished tests for size: 374
Finished tests for size: 411
Finished tests for size: 452
Finished tests for size: 497
Finished tests for size: 547
Finished tests for size: 602
Finished tests for size: 662
Finished tests for size: 728
Finished tests for size: 801
Finished tests for size: 881
Finished tests for size: 970
Finished tests for size: 1067
Finished tests for size: 1173
Finished tests for size: 1291
Finished tests for size: 1420
Finished tests for size: 1562
Finished tests for size: 1718
Finished tests for size: 1890
Finished tests for size: 2079
Finished tests for size: 2287
Finished tests for size: 2516
Finished tests for size: 2768
Finished tests for size: 3044
Finished tests for size: 3349
Finished tests for size: 3684
Finished tests for size: 4052
Finished tests for size: 4457
Finished tests for size: 4903
Finished tests for size: 5394
Finished tests for size: 5933
Finished tests for size: 6526
Finished tests for size: 7179
Finished tests for size: 7897
Finished tests for size: 8687
Finished tests for size: 9555
Finished tests for size: 10511
Finished tests for size: 11562
Finished tests for size: 12718
Finished tests for size: 13990
Finished tests for size: 15389
Finished tests for size: 16928
Finished tests for size: 18621
Finished tests for size: 20484
Finished tests for size: 22532
Finished tests for size: 24785
Finished tests for size: 27264
Finished tests for size: 29990
Total Incremental Test Time = 33.7738364 Seconds.

Starting Benchmark.js suite...

--- Benchmark for array size = 10 ---

� Plots generated: C:\learning\TypeScript\randomProjects\sortingAlgorithms\benchmark_plot.html
   Open this file in your web browser to view the charts.
Bubble Sort (10) x 5,055,595 ops/sec ±6.71% (32 runs sampled)
Bubble Sort Smart (10) x 5,919,747 ops/sec ±3.18% (31 runs sampled)
Insertion Sort (10) x 8,537,950 ops/sec ±5.98% (33 runs sampled)
Selection Sort (10) x 8,655,471 ops/sec ±2.24% (38 runs sampled)
Merge Sort (10) x 229,202 ops/sec ±2.65% (34 runs sampled)
Quick Sort (10) x 1,261,448 ops/sec ±7.02% (32 runs sampled)
Counting Sort (10) x 2,991,532 ops/sec ±2.66% (33 runs sampled)
Radix Sort (10) x 1,200,394 ops/sec ±3.94% (28 runs sampled)
Bitwise Radix Sort (10) x 677,444 ops/sec ±2.80% (36 runs sampled)
Heap Sort (10) x 1,946,576 ops/sec ±5.82% (36 runs sampled)
Shell Sort (10) x 5,781,524 ops/sec ±2.60% (36 runs sampled)
Suite complete.
Selection Sort (10):               8655471.05 ops/sec (±2.24%)
Insertion Sort (10):               8537949.86 ops/sec (±5.98%)
Bubble Sort Smart (10):            5919747.16 ops/sec (±3.18%)
Shell Sort (10):                   5781523.66 ops/sec (±2.60%)
Bubble Sort (10):                  5055595.25 ops/sec (±6.71%)
Counting Sort (10):                2991531.65 ops/sec (±2.66%)
Heap Sort (10):                    1946576.04 ops/sec (±5.82%)
Quick Sort (10):                   1261448.14 ops/sec (±7.02%)
Radix Sort (10):                   1200393.51 ops/sec (±3.94%)
Bitwise Radix Sort (10):           677443.88 ops/sec (±2.80%)
Merge Sort (10):                   229202.33 ops/sec (±2.65%)

--- Benchmark for array size = 50 ---
Bubble Sort (50) x 364,248 ops/sec ±3.20% (28 runs sampled)
Bubble Sort Smart (50) x 293,130 ops/sec ±8.09% (33 runs sampled)
Insertion Sort (50) x 474,590 ops/sec ±8.49% (27 runs sampled)
Selection Sort (50) x 911,488 ops/sec ±2.36% (34 runs sampled)
Merge Sort (50) x 43,039 ops/sec ±1.51% (34 runs sampled)
Quick Sort (50) x 220,928 ops/sec ±1.61% (36 runs sampled)
Counting Sort (50) x 1,005,243 ops/sec ±1.94% (38 runs sampled)
Radix Sort (50) x 449,287 ops/sec ±1.62% (37 runs sampled)
Bitwise Radix Sort (50) x 576,288 ops/sec ±1.65% (38 runs sampled)
Heap Sort (50) x 307,562 ops/sec ±1.79% (38 runs sampled)
Shell Sort (50) x 919,720 ops/sec ±3.40% (33 runs sampled)
Suite complete.
Counting Sort (50):                1005243.22 ops/sec (±1.94%)
Shell Sort (50):                   919719.60 ops/sec (±3.40%)
Selection Sort (50):               911488.04 ops/sec (±2.36%)
Bitwise Radix Sort (50):           576288.34 ops/sec (±1.65%)
Insertion Sort (50):               474589.72 ops/sec (±8.49%)
Radix Sort (50):                   449286.68 ops/sec (±1.62%)
Bubble Sort (50):                  364247.78 ops/sec (±3.20%)
Heap Sort (50):                    307562.10 ops/sec (±1.79%)
Bubble Sort Smart (50):            293130.34 ops/sec (±8.09%)
Quick Sort (50):                   220927.68 ops/sec (±1.61%)
Merge Sort (50):                   43039.01 ops/sec (±1.51%)

--- Benchmark for array size = 100 ---
Bubble Sort (100) x 90,354 ops/sec ±3.29% (37 runs sampled)
Bubble Sort Smart (100) x 89,090 ops/sec ±3.88% (31 runs sampled)
Insertion Sort (100) x 203,005 ops/sec ±1.73% (39 runs sampled)
Selection Sort (100) x 179,495 ops/sec ±1.36% (39 runs sampled)
Merge Sort (100) x 20,745 ops/sec ±2.91% (38 runs sampled)
Quick Sort (100) x 70,983 ops/sec ±6.56% (34 runs sampled)
Counting Sort (100) x 367,316 ops/sec ±6.01% (31 runs sampled)
Radix Sort (100) x 127,003 ops/sec ±6.42% (33 runs sampled)
Bitwise Radix Sort (100) x 432,183 ops/sec ±2.13% (38 runs sampled)
Heap Sort (100) x 112,278 ops/sec ±9.85% (32 runs sampled)
Shell Sort (100) x 309,668 ops/sec ±6.91% (26 runs sampled)
Suite complete.
Bitwise Radix Sort (100):          432182.70 ops/sec (±2.13%)
Counting Sort (100):               367316.08 ops/sec (±6.01%)
Shell Sort (100):                  309668.07 ops/sec (±6.91%)
Insertion Sort (100):              203004.64 ops/sec (±1.73%)
Selection Sort (100):              179494.94 ops/sec (±1.36%)
Radix Sort (100):                  127002.95 ops/sec (±6.42%)
Heap Sort (100):                   112277.62 ops/sec (±9.85%)
Bubble Sort (100):                 90353.72 ops/sec (±3.29%)
Bubble Sort Smart (100):           89089.70 ops/sec (±3.88%)
Quick Sort (100):                  70982.64 ops/sec (±6.56%)
Merge Sort (100):                  20744.83 ops/sec (±2.91%)

--- Benchmark for array size = 250 ---
Bubble Sort (250) x 10,164 ops/sec ±4.43% (28 runs sampled)
Bubble Sort Smart (250) x 11,929 ops/sec ±1.50% (36 runs sampled)
Insertion Sort (250) x 35,212 ops/sec ±2.28% (37 runs sampled)
Selection Sort (250) x 32,229 ops/sec ±1.62% (35 runs sampled)
Merge Sort (250) x 7,103 ops/sec ±5.48% (36 runs sampled)
Quick Sort (250) x 32,722 ops/sec ±2.86% (34 runs sampled)
Counting Sort (250) x 208,239 ops/sec ±3.41% (25 runs sampled)
Radix Sort (250) x 74,240 ops/sec ±1.90% (36 runs sampled)
Bitwise Radix Sort (250) x 142,953 ops/sec ±1.50% (39 runs sampled)
Heap Sort (250) x 41,839 ops/sec ±2.16% (39 runs sampled)
Shell Sort (250) x 117,602 ops/sec ±1.29% (36 runs sampled)
Suite complete.
Counting Sort (250):               208239.49 ops/sec (±3.41%)
Bitwise Radix Sort (250):          142952.76 ops/sec (±1.50%)
Shell Sort (250):                  117601.80 ops/sec (±1.29%)
Radix Sort (250):                  74240.34 ops/sec (±1.90%)
Heap Sort (250):                   41839.42 ops/sec (±2.16%)
Insertion Sort (250):              35212.32 ops/sec (±2.28%)
Quick Sort (250):                  32721.81 ops/sec (±2.86%)
Selection Sort (250):              32229.06 ops/sec (±1.62%)
Bubble Sort Smart (250):           11928.66 ops/sec (±1.50%)
Bubble Sort (250):                 10163.52 ops/sec (±4.43%)
Merge Sort (250):                  7102.72 ops/sec (±5.48%)

--- Benchmark for array size = 500 ---
Bubble Sort (500) x 3,469 ops/sec ±1.32% (37 runs sampled)
Bubble Sort Smart (500) x 3,298 ops/sec ±2.15% (39 runs sampled)
Insertion Sort (500) x 9,050 ops/sec ±2.38% (37 runs sampled)
Selection Sort (500) x 9,519 ops/sec ±1.48% (33 runs sampled)
Merge Sort (500) x 3,904 ops/sec ±1.63% (38 runs sampled)
Quick Sort (500) x 12,604 ops/sec ±2.99% (36 runs sampled)
Counting Sort (500) x 104,902 ops/sec ±3.17% (34 runs sampled)
Radix Sort (500) x 37,400 ops/sec ±2.18% (40 runs sampled)
Bitwise Radix Sort (500) x 71,922 ops/sec ±3.58% (35 runs sampled)
Heap Sort (500) x 13,541 ops/sec ±3.47% (32 runs sampled)
Shell Sort (500) x 32,551 ops/sec ±2.95% (32 runs sampled)
Suite complete.
Counting Sort (500):               104902.43 ops/sec (±3.17%)
Bitwise Radix Sort (500):          71921.87 ops/sec (±3.58%)
Radix Sort (500):                  37400.42 ops/sec (±2.18%)
Shell Sort (500):                  32550.81 ops/sec (±2.95%)
Heap Sort (500):                   13540.97 ops/sec (±3.47%)
Quick Sort (500):                  12604.33 ops/sec (±2.99%)
Selection Sort (500):              9518.64 ops/sec (±1.48%)
Insertion Sort (500):              9050.43 ops/sec (±2.38%)
Merge Sort (500):                  3904.12 ops/sec (±1.63%)
Bubble Sort (500):                 3468.89 ops/sec (±1.32%)
Bubble Sort Smart (500):           3298.48 ops/sec (±2.15%)

--- Benchmark for array size = 1000 ---
Bubble Sort (1000) x 923 ops/sec ±1.33% (37 runs sampled)
Bubble Sort Smart (1000) x 912 ops/sec ±1.61% (37 runs sampled)
Insertion Sort (1000) x 2,561 ops/sec ±2.73% (35 runs sampled)
Selection Sort (1000) x 2,474 ops/sec ±5.10% (37 runs sampled)
Merge Sort (1000) x 1,849 ops/sec ±2.58% (37 runs sampled)
Quick Sort (1000) x 5,881 ops/sec ±1.91% (38 runs sampled)
Counting Sort (1000) x 48,071 ops/sec ±1.45% (33 runs sampled)
Radix Sort (1000) x 13,790 ops/sec ±2.33% (39 runs sampled)
Bitwise Radix Sort (1000) x 46,673 ops/sec ±1.83% (34 runs sampled)
Heap Sort (1000) x 6,140 ops/sec ±2.23% (36 runs sampled)
Shell Sort (1000) x 12,708 ops/sec ±1.21% (37 runs sampled)
Suite complete.
Counting Sort (1000):              48071.07 ops/sec (±1.45%)
Bitwise Radix Sort (1000):         46672.91 ops/sec (±1.83%)
Radix Sort (1000):                 13789.66 ops/sec (±2.33%)
Shell Sort (1000):                 12707.65 ops/sec (±1.21%)
Heap Sort (1000):                  6139.68 ops/sec (±2.23%)
Quick Sort (1000):                 5880.96 ops/sec (±1.91%)
Insertion Sort (1000):             2560.56 ops/sec (±2.73%)
Selection Sort (1000):             2473.61 ops/sec (±5.10%)
Merge Sort (1000):                 1849.08 ops/sec (±2.58%)
Bubble Sort (1000):                923.16 ops/sec (±1.33%)
Bubble Sort Smart (1000):          912.23 ops/sec (±1.61%)

--- Benchmark for array size = 1500 ---
Bubble Sort (1500) x 432 ops/sec ±1.23% (36 runs sampled)
Bubble Sort Smart (1500) x 417 ops/sec ±0.91% (39 runs sampled)
Insertion Sort (1500) x 1,217 ops/sec ±2.16% (36 runs sampled)
Selection Sort (1500) x 1,228 ops/sec ±1.32% (38 runs sampled)
Merge Sort (1500) x 1,201 ops/sec ±2.80% (37 runs sampled)
Quick Sort (1500) x 3,617 ops/sec ±2.35% (33 runs sampled)
Counting Sort (1500) x 27,426 ops/sec ±3.26% (33 runs sampled)
Radix Sort (1500) x 9,722 ops/sec ±1.63% (35 runs sampled)
Bitwise Radix Sort (1500) x 32,353 ops/sec ±1.79% (37 runs sampled)
Heap Sort (1500) x 3,974 ops/sec ±1.81% (37 runs sampled)
Shell Sort (1500) x 7,593 ops/sec ±1.88% (35 runs sampled)
Suite complete.
Bitwise Radix Sort (1500):         32353.11 ops/sec (±1.79%)
Counting Sort (1500):              27425.80 ops/sec (±3.26%)
Radix Sort (1500):                 9721.97 ops/sec (±1.63%)
Shell Sort (1500):                 7593.25 ops/sec (±1.88%)
Heap Sort (1500):                  3974.02 ops/sec (±1.81%)
Quick Sort (1500):                 3616.93 ops/sec (±2.35%)
Selection Sort (1500):             1228.06 ops/sec (±1.32%)
Insertion Sort (1500):             1217.50 ops/sec (±2.16%)
Merge Sort (1500):                 1201.40 ops/sec (±2.80%)
Bubble Sort (1500):                431.89 ops/sec (±1.23%)
Bubble Sort Smart (1500):          416.62 ops/sec (±0.91%)

--- Benchmark for array size = 2000 ---
Bubble Sort (2000) x 247 ops/sec ±0.98% (38 runs sampled)
Bubble Sort Smart (2000) x 239 ops/sec ±0.96% (37 runs sampled)
Insertion Sort (2000) x 610 ops/sec ±3.03% (38 runs sampled)
Selection Sort (2000) x 713 ops/sec ±1.47% (38 runs sampled)
Merge Sort (2000) x 935 ops/sec ±1.52% (38 runs sampled)
Quick Sort (2000) x 2,531 ops/sec ±1.74% (36 runs sampled)
Counting Sort (2000) x 17,737 ops/sec ±4.52% (32 runs sampled)
Radix Sort (2000) x 7,287 ops/sec ±2.03% (33 runs sampled)
Bitwise Radix Sort (2000) x 25,254 ops/sec ±1.43% (40 runs sampled)
Heap Sort (2000) x 2,828 ops/sec ±2.26% (39 runs sampled)
Shell Sort (2000) x 5,260 ops/sec ±2.05% (38 runs sampled)
Suite complete.
Bitwise Radix Sort (2000):         25254.06 ops/sec (±1.43%)
Counting Sort (2000):              17736.73 ops/sec (±4.52%)
Radix Sort (2000):                 7286.99 ops/sec (±2.03%)
Shell Sort (2000):                 5259.70 ops/sec (±2.05%)
Heap Sort (2000):                  2827.81 ops/sec (±2.26%)
Quick Sort (2000):                 2531.22 ops/sec (±1.74%)
Merge Sort (2000):                 935.25 ops/sec (±1.52%)
Selection Sort (2000):             712.67 ops/sec (±1.47%)
Insertion Sort (2000):             610.35 ops/sec (±3.03%)
Bubble Sort (2000):                247.42 ops/sec (±0.98%)
Bubble Sort Smart (2000):          239.49 ops/sec (±0.96%)

--- Benchmark for array size = 3500 ---
Bubble Sort (3500) x 74.37 ops/sec ±0.62% (32 runs sampled)
Bubble Sort Smart (3500) x 69.71 ops/sec ±0.63% (31 runs sampled)
Insertion Sort (3500) x 248 ops/sec ±2.01% (35 runs sampled)
Selection Sort (3500) x 248 ops/sec ±0.77% (38 runs sampled)
Merge Sort (3500) x 525 ops/sec ±1.66% (37 runs sampled)
Quick Sort (3500) x 1,423 ops/sec ±1.35% (38 runs sampled)
Counting Sort (3500) x 10,275 ops/sec ±3.73% (35 runs sampled)
Radix Sort (3500) x 4,200 ops/sec ±1.70% (34 runs sampled)
Bitwise Radix Sort (3500) x 13,972 ops/sec ±2.38% (38 runs sampled)
Heap Sort (3500) x 1,490 ops/sec ±1.52% (38 runs sampled)
Shell Sort (3500) x 2,792 ops/sec ±1.67% (36 runs sampled)
Suite complete.
Bitwise Radix Sort (3500):         13972.32 ops/sec (±2.38%)
Counting Sort (3500):              10275.48 ops/sec (±3.73%)
Radix Sort (3500):                 4199.76 ops/sec (±1.70%)
Shell Sort (3500):                 2791.62 ops/sec (±1.67%)
Heap Sort (3500):                  1490.21 ops/sec (±1.52%)
Quick Sort (3500):                 1422.88 ops/sec (±1.35%)
Merge Sort (3500):                 524.59 ops/sec (±1.66%)
Selection Sort (3500):             248.36 ops/sec (±0.77%)
Insertion Sort (3500):             247.53 ops/sec (±2.01%)
Bubble Sort (3500):                74.37 ops/sec (±0.62%)
Bubble Sort Smart (3500):          69.71 ops/sec (±0.63%)

--- Benchmark for array size = 5000 ---
Bubble Sort (5000) x 28.09 ops/sec ±3.39% (23 runs sampled)
Bubble Sort Smart (5000) x 30.95 ops/sec ±0.55% (25 runs sampled)
Insertion Sort (5000) x 121 ops/sec ±1.39% (33 runs sampled)
Selection Sort (5000) x 119 ops/sec ±0.91% (33 runs sampled)
Merge Sort (5000) x 361 ops/sec ±0.73% (39 runs sampled)
Quick Sort (5000) x 834 ops/sec ±2.75% (36 runs sampled)
Counting Sort (5000) x 7,007 ops/sec ±2.55% (32 runs sampled)
Radix Sort (5000) x 2,935 ops/sec ±1.56% (37 runs sampled)
Bitwise Radix Sort (5000) x 10,260 ops/sec ±1.25% (39 runs sampled)
Heap Sort (5000) x 1,022 ops/sec ±1.67% (38 runs sampled)
Shell Sort (5000) x 1,889 ops/sec ±1.28% (38 runs sampled)
Suite complete.
Bitwise Radix Sort (5000):         10260.01 ops/sec (±1.25%)
Counting Sort (5000):              7006.66 ops/sec (±2.55%)
Radix Sort (5000):                 2935.40 ops/sec (±1.56%)
Shell Sort (5000):                 1888.67 ops/sec (±1.28%)
Heap Sort (5000):                  1021.53 ops/sec (±1.67%)
Quick Sort (5000):                 834.15 ops/sec (±2.75%)
Merge Sort (5000):                 361.48 ops/sec (±0.73%)
Insertion Sort (5000):             121.12 ops/sec (±1.39%)
Selection Sort (5000):             119.30 ops/sec (±0.91%)
Bubble Sort Smart (5000):          30.95 ops/sec (±0.55%)
Bubble Sort (5000):                28.09 ops/sec (±3.39%)

--- Benchmark for array size = 10000 ---
Bubble Sort (10000) x 6.76 ops/sec ±1.12% (11 runs sampled)
Bubble Sort Smart (10000) x 5.73 ops/sec ±7.28% (10 runs sampled)
Insertion Sort (10000) x 28.77 ops/sec ±3.57% (23 runs sampled)
Selection Sort (10000) x 30.46 ops/sec ±0.79% (24 runs sampled)
Merge Sort (10000) x 181 ops/sec ±0.42% (36 runs sampled)
Quick Sort (10000) x 444 ops/sec ±1.51% (38 runs sampled)
Counting Sort (10000) x 2,918 ops/sec ±1.72% (38 runs sampled)
Radix Sort (10000) x 1,188 ops/sec ±1.24% (38 runs sampled)
Bitwise Radix Sort (10000) x 5,222 ops/sec ±1.69% (39 runs sampled)
Heap Sort (10000) x 463 ops/sec ±1.73% (37 runs sampled)
Shell Sort (10000) x 827 ops/sec ±2.62% (38 runs sampled)
Suite complete.
Bitwise Radix Sort (10000):        5221.57 ops/sec (±1.69%)
Counting Sort (10000):             2917.96 ops/sec (±1.72%)
Radix Sort (10000):                1187.84 ops/sec (±1.24%)
Shell Sort (10000):                827.30 ops/sec (±2.62%)
Heap Sort (10000):                 463.30 ops/sec (±1.73%)
Quick Sort (10000):                444.34 ops/sec (±1.51%)
Merge Sort (10000):                180.60 ops/sec (±0.42%)
Selection Sort (10000):            30.46 ops/sec (±0.79%)
Insertion Sort (10000):            28.77 ops/sec (±3.57%)
Bubble Sort (10000):               6.76 ops/sec (±1.12%)
Bubble Sort Smart (10000):         5.73 ops/sec (±7.28%)

--- Benchmark for array size = 20000 ---
Bubble Sort (20000) x 1.50 ops/sec ±1.78% (6 runs sampled)
Bubble Sort Smart (20000) x 1.44 ops/sec ±3.41% (6 runs sampled)
Insertion Sort (20000) x 7.62 ops/sec ±0.98% (12 runs sampled)
Selection Sort (20000) x 7.36 ops/sec ±4.79% (12 runs sampled)
Merge Sort (20000) x 80.41 ops/sec ±3.67% (29 runs sampled)
Quick Sort (20000) x 174 ops/sec ±1.56% (33 runs sampled)
Counting Sort (20000) x 1,174 ops/sec ±1.92% (36 runs sampled)
Radix Sort (20000) x 459 ops/sec ±1.37% (37 runs sampled)
Bitwise Radix Sort (20000) x 1,420 ops/sec ±1.71% (36 runs sampled)
Heap Sort (20000) x 211 ops/sec ±1.44% (36 runs sampled)
Shell Sort (20000) x 365 ops/sec ±1.47% (36 runs sampled)
Suite complete.
Bitwise Radix Sort (20000):        1419.75 ops/sec (±1.71%)
Counting Sort (20000):             1173.87 ops/sec (±1.92%)
Radix Sort (20000):                459.41 ops/sec (±1.37%)
Shell Sort (20000):                364.65 ops/sec (±1.47%)
Heap Sort (20000):                 211.32 ops/sec (±1.44%)
Quick Sort (20000):                174.02 ops/sec (±1.56%)
Merge Sort (20000):                80.41 ops/sec (±3.67%)
Insertion Sort (20000):            7.62 ops/sec (±0.98%)
Selection Sort (20000):            7.36 ops/sec (±4.79%)
Bubble Sort (20000):               1.50 ops/sec (±1.78%)
Bubble Sort Smart (20000):         1.44 ops/sec (±3.41%)

--- Benchmark for array size = 30000 ---
Bubble Sort (30000) x 0.53 ops/sec ±25.57% (5 runs sampled)
Bubble Sort Smart (30000) x 0.60 ops/sec ±2.20% (5 runs sampled)
Insertion Sort (30000) x 3.37 ops/sec ±1.75% (8 runs sampled)
Selection Sort (30000) x 3.33 ops/sec ±2.44% (8 runs sampled)
Merge Sort (30000) x 55.04 ops/sec ±1.34% (30 runs sampled)
Quick Sort (30000) x 115 ops/sec ±2.61% (31 runs sampled)
Counting Sort (30000) x 725 ops/sec ±1.46% (36 runs sampled)
Radix Sort (30000) x 296 ops/sec ±1.82% (34 runs sampled)
Bitwise Radix Sort (30000) x 993 ops/sec ±1.40% (37 runs sampled)
Heap Sort (30000) x 136 ops/sec ±0.73% (36 runs sampled)
Shell Sort (30000) x 234 ops/sec ±0.87% (37 runs sampled)
Suite complete.
Bitwise Radix Sort (30000):        992.52 ops/sec (±1.40%)
Counting Sort (30000):             724.81 ops/sec (±1.46%)
Radix Sort (30000):                296.07 ops/sec (±1.82%)
Shell Sort (30000):                234.17 ops/sec (±0.87%)
Heap Sort (30000):                 135.94 ops/sec (±0.73%)
Quick Sort (30000):                114.59 ops/sec (±2.61%)
Merge Sort (30000):                55.04 ops/sec (±1.34%)
Insertion Sort (30000):            3.37 ops/sec (±1.75%)
Selection Sort (30000):            3.33 ops/sec (±2.44%)
Bubble Sort Smart (30000):         0.60 ops/sec (±2.20%)
Bubble Sort (30000):               0.53 ops/sec (±25.57%)

� All benchmarks complete!

� Plots generated: C:\learning\TypeScript\randomProjects\sortingAlgorithms\benchmark_plot.html
   Open this file in your web browser to view the charts.
